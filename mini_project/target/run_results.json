{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.2", "generated_at": "2025-03-14T14:01:11.796088Z", "invocation_id": "795cc55e-6725-47cc-8e28-3f57416f191e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:00:57.954128Z", "completed_at": "2025-03-14T14:00:57.969927Z"}, {"name": "execute", "started_at": "2025-03-14T14:00:57.969927Z", "completed_at": "2025-03-14T14:00:59.198475Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2443468570709229, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7e57-000c-3d6e00021db2"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.customers", "compiled": true, "compiled_code": "WITH RAW_FORM AS (\n    SELECT\n    DISTINCT * \n    FROM mini_project.raw.ONLINE_FOOD_DELIVERY_CUSTOMERS\n    WHERE customer_id IS NOT NULL AND company IS NOT NULL AND customer_name IS NOT NULL\n    ORDER BY customer_id\n)\nSELECT\nCAST(CUSTOMER_ID AS INT) AS CUSTOMER_ID,\nCUSTOMER_NAME,\nCOMPANY\nFROM RAW_FORM", "relation_name": "mini_project.staging.customers", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:00:59.213947Z", "completed_at": "2025-03-14T14:00:59.230249Z"}, {"name": "execute", "started_at": "2025-03-14T14:00:59.230249Z", "completed_at": "2025-03-14T14:00:59.920446Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7064986228942871, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7d7b-000c-3d6e00024816"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.products", "compiled": true, "compiled_code": "WITH RAW_FORM AS (\n    SELECT\n    DISTINCT * \n    FROM mini_project.raw.ONLINE_FOOD_DELIVERY_PRODUCTS\n    WHERE PRODUCT_ID IS NOT NULL AND PRODUCT_FAMILY IS NOT NULL AND PRODUCT_SUB_FAMILY IS NOT NULL\n    ORDER BY PRODUCT_ID\n)\nSELECT\n*\nFROM\nRAW_FORM", "relation_name": "mini_project.staging.products", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:00:59.936611Z", "completed_at": "2025-03-14T14:00:59.936611Z"}, {"name": "execute", "started_at": "2025-03-14T14:00:59.936611Z", "completed_at": "2025-03-14T14:01:00.792278Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8556668758392334, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7e57-000c-3d6e00021db6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.transactions", "compiled": true, "compiled_code": "WITH RAW_FORM AS (\n    SELECT\n    DISTINCT * \n    FROM mini_project.raw.ONLINE_FOOD_DELIVERY_TRANSACTIONS\n    WHERE\n    CUSTOMER_ID IS NOT NULL AND \n    PRODUCT_ID IS NOT NULL AND \n    PAYMENT_MONTH IS NOT NULL AND \n    REVENUE_TYPE IS NOT NULL AND \n    REVENUE IS NOT NULL AND \n    QUANTITY IS NOT NULL AND\n    DIMENSION_1 IS NOT NULL AND\n    DIMENSION_2 IS NOT NULL AND\n    DIMENSION_3 IS NOT NULL AND\n    DIMENSION_4 IS NOT NULL AND\n    DIMENSION_5 IS NOT NULL AND\n    DIMENSION_6 IS NOT NULL AND\n    DIMENSION_7 IS NOT NULL AND\n    DIMENSION_8 IS NOT NULL AND\n    DIMENSION_9 IS NOT NULL AND\n    DIMENSION_10 IS NOT NULL AND\n    COMPANIES IS NOT NULL\n    ORDER BY PAYMENT_MONTH\n)\nSELECT\nCAST(CUSTOMER_ID AS INT) AS CUSTOMER_ID,\nPRODUCT_ID,\nTRY_TO_DATE(PAYMENT_MONTH, 'MM-DD-YYYY') AS PAYMENT_MONTH,\nCAST(REVENUE_TYPE AS SMALLINT) AS REVENUE_TYPE,\nCAST(REVENUE AS FLOAT) AS REVENUE,\nCAST(QUANTITY AS SMALLINT) AS QUANTITY,\nCOMPANIES\nFROM RAW_FORM", "relation_name": "mini_project.staging.transactions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:00.807366Z", "completed_at": "2025-03-14T14:01:00.808453Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:00.808453Z", "completed_at": "2025-03-14T14:01:01.877030Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0749292373657227, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7e57-000c-3d6e00021dba"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.join", "compiled": true, "compiled_code": "WITH customer_and_transaction_joins AS (\n    SELECT\n    customers.CUSTOMER_ID,\n    CUSTOMER_NAME,\n    COMPANY,\n    PRODUCT_ID,\n    PAYMENT_MONTH,\n    REVENUE_TYPE,\n    REVENUE,\n    QUANTITY,\n    transactions.COMPANIES\n    FROM \n    mini_project.staging.transactions AS transactions\n    INNER JOIN\n    mini_project.staging.customers AS customers\n    ON\n    transactions.CUSTOMER_ID = customers.CUSTOMER_ID\n), product_and_transactions_join AS(\n    SELECT\n    CUSTOMER_ID,\n    CUSTOMER_NAME,\n    COMPANY,\n    products.PRODUCT_ID,\n    PRODUCT_FAMILY,\n    PRODUCT_SUB_FAMILY,\n    DATE(PAYMENT_MONTH, 'YYYY-DD-MM') AS PAYMENT_MONTH,\n    REVENUE_TYPE,\n    REVENUE,\n    QUANTITY,\n    COMPANIES\n    FROM\n    customer_and_transaction_joins\n    INNER JOIN\n    mini_project.staging.products AS products \n    ON customer_and_transaction_joins.PRODUCT_ID = products.PRODUCT_ID\n)\nSELECT * FROM product_and_transactions_join\nwhere REVENUE_TYPE=1\norder by customer_id", "relation_name": "mini_project.intermediate_joins.join", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:01.907653Z", "completed_at": "2025-03-14T14:01:01.915666Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:01.916667Z", "completed_at": "2025-03-14T14:01:02.728295Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.834247350692749, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7d7b-000c-3d6e0002481a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.month_revenue", "compiled": true, "compiled_code": "SELECT \n    customer_id,\n    product_id,\n    payment_month,\n    SUM(revenue) AS total_revenue\nFROM \n    mini_project.intermediate_joins.join\nGROUP BY \n    customer_id, \n    product_id,\n    payment_month\nORDER BY \n    customer_id, \n    product_id, \n    payment_month", "relation_name": "mini_project.intermediate_joins.month_revenue", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:02.744978Z", "completed_at": "2025-03-14T14:01:02.763375Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:02.764394Z", "completed_at": "2025-03-14T14:01:03.328274Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5999786853790283, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7d7b-000c-3d6e0002481e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.revenue_lost_due_to_contraction_kpi", "compiled": true, "compiled_code": "WITH monthly_revenue AS (\n    SELECT\n        payment_month,\n        SUM(revenue) AS total_revenue\n    FROM\n        mini_project.intermediate_joins.join\n    GROUP BY\n        PAYMENT_MONTH\n)\nSELECT\n    PAYMENT_MONTH\n    total_revenue,\n    LAG(total_revenue) OVER (ORDER BY PAYMENT_MONTH) AS PREVIOUS_MONTH_REVENUE,\n    CASE\n        WHEN TOTAL_REVENUE<PREVIOUS_MONTH_REVENUE THEN ABS(PREVIOUS_MONTH_REVENUE-TOTAL_REVENUE)\n        ELSE 0\n    END AS REVENUE_LOST\nFROM\n    monthly_revenue\nORDER BY\n    PAYMENT_MONTH", "relation_name": "mini_project.mart.revenue_lost_due_to_contraction_kpi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:03.352218Z", "completed_at": "2025-03-14T14:01:03.360240Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:03.360240Z", "completed_at": "2025-03-14T14:01:04.217898Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8724374771118164, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7db6-000c-3d6e0001fee6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.outer_join", "compiled": true, "compiled_code": "select\n    j.CUSTOMER_ID,\n    CUSTOMER_NAME,\n    COMPANY,\n    j.PRODUCT_ID,\n    PRODUCT_FAMILY,\n    PRODUCT_SUB_FAMILY,\n    j.PAYMENT_MONTH,\n    REVENUE,\n    REVENUE_TYPE,\n    total_revenue,\n    QUANTITY,\n    COMPANIES\nfrom \nmini_project.intermediate_joins.join as j \ninner join\nmini_project.intermediate_joins.month_revenue as mr\non j.customer_id=mr.customer_id and j.product_id=mr.product_id AND j.payment_month=mr.payment_month\norder by CUSTOMER_ID,PAYMENT_MONTH", "relation_name": "mini_project.intermediate_joins.outer_join", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:04.219904Z", "completed_at": "2025-03-14T14:01:04.228949Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:04.229913Z", "completed_at": "2025-03-14T14:01:06.075188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.8552837371826172, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7d7b-000c-3d6e00024822"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.kpi1_l3m", "compiled": true, "compiled_code": "WITH BASE AS (\n    SELECT\n    CUSTOMER_ID,\n    CUSTOMER_NAME,\n    COMPANY,\n    PRODUCT_ID,\n    PRODUCT_FAMILY,\n    PRODUCT_SUB_FAMILY,\n    PAYMENT_MONTH,\n    DATEADD(month,-3,PAYMENT_MONTH) AS PREVIOUS_MONTH,\n    REVENUE_TYPE,\n    TOTAL_REVENUE,\n    QUANTITY,\n    COMPANIES\n    FROM \n    mini_project.intermediate_joins.outer_join\n),CTE AS(\n    SELECT\n    BASE.CUSTOMER_ID,\n    BASE.CUSTOMER_NAME,\n    BASE.COMPANY,\n    BASE.PRODUCT_ID,\n    BASE.PRODUCT_FAMILY,\n    BASE.PRODUCT_SUB_FAMILY,\n    BASE.PAYMENT_MONTH,\n    BASE.PREVIOUS_MONTH,\n    BASE.REVENUE_TYPE,\n    BASE.TOTAL_REVENUE,\n    BASE.QUANTITY,\n    BASE.COMPANIES,\n    OJ.TOTAL_REVENUE AS PREVIOUS_MONTH_REVENUE\n    FROM\n    BASE LEFT JOIN mini_project.intermediate_joins.outer_join AS OJ on BASE.PREVIOUS_MONTH = OJ.PAYMENT_MONTH AND BASE.CUSTOMER_ID = OJ.CUSTOMER_ID \n),FINAL AS (\n    SELECT \n*,\nCASE\n    WHEN PREVIOUS_MONTH_REVENUE IS NULL THEN 'NEW_CUSTOMER'\n    WHEN TOTAL_REVENUE = 0 THEN 'CHURNED_CUSTOMER'\n    ELSE 'RETAINED_CUSTOMER'\nEND AS RETENTION,\nCASE\n    WHEN PREVIOUS_MONTH_REVENUE IS NULL THEN 0\n    WHEN TOTAL_REVENUE = 0 THEN ABS(PREVIOUS_MONTH_REVENUE)\n    ELSE 0\nEND AS CUSTOMER_CHURN_REVENUE\nFROM \ncte\nORDER BY CUSTOMER_ID\n)\nSELECT \n*\nFROM\nFINAL\nORDER BY CUSTOMER_ID,PAYMENT_MONTH", "relation_name": "mini_project.mart.kpi1_l3m", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:06.079848Z", "completed_at": "2025-03-14T14:01:06.079848Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:06.079848Z", "completed_at": "2025-03-14T14:01:07.965924Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.8867700099945068, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7db6-000c-3d6e0001feea"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.kpi1_lm", "compiled": true, "compiled_code": "WITH BASE AS (\n    SELECT\n    CUSTOMER_ID,\n    CUSTOMER_NAME,\n    COMPANY,\n    PRODUCT_ID,\n    PRODUCT_FAMILY,\n    PRODUCT_SUB_FAMILY,\n    PAYMENT_MONTH,\n    DATEADD(month,-1,PAYMENT_MONTH) AS PREVIOUS_MONTH,\n    REVENUE_TYPE,\n    TOTAL_REVENUE,\n    QUANTITY,\n    COMPANIES\n    FROM \n    mini_project.intermediate_joins.outer_join\n),CTE AS(\n    SELECT\n    BASE.CUSTOMER_ID,\n    BASE.CUSTOMER_NAME,\n    BASE.COMPANY,\n    BASE.PRODUCT_ID,\n    BASE.PRODUCT_FAMILY,\n    BASE.PRODUCT_SUB_FAMILY,\n    BASE.PAYMENT_MONTH,\n    BASE.PREVIOUS_MONTH,\n    BASE.REVENUE_TYPE,\n    BASE.TOTAL_REVENUE,\n    BASE.QUANTITY,\n    BASE.COMPANIES,\n    OJ.TOTAL_REVENUE AS PREVIOUS_MONTH_REVENUE\n    FROM\n    BASE LEFT JOIN mini_project.intermediate_joins.outer_join AS OJ on BASE.PREVIOUS_MONTH = OJ.PAYMENT_MONTH AND BASE.CUSTOMER_ID = OJ.CUSTOMER_ID \n),FINAL AS (\n    SELECT \n*,\nCASE\n    WHEN PREVIOUS_MONTH_REVENUE IS NULL THEN 'NEW_CUSTOMER'\n    WHEN TOTAL_REVENUE = 0 THEN 'CHURNED_CUSTOMER'\n    ELSE 'RETAINED_CUSTOMER'\nEND AS RETENTION,\nCASE\n    WHEN PREVIOUS_MONTH_REVENUE IS NULL THEN 0\n    WHEN TOTAL_REVENUE = 0 THEN ABS(PREVIOUS_MONTH_REVENUE)\n    ELSE 0\nEND AS CUSTOMER_CHURN_REVENUE\nFROM \ncte\nORDER BY CUSTOMER_ID\n)\nSELECT \n*\nFROM\nFINAL\nORDER BY CUSTOMER_ID,PAYMENT_MONTH", "relation_name": "mini_project.mart.kpi1_lm", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:07.967933Z", "completed_at": "2025-03-14T14:01:07.975145Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:07.975145Z", "completed_at": "2025-03-14T14:01:09.130204Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.16227126121521, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7db6-000c-3d6e0001feee"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.kpi1_ltm", "compiled": true, "compiled_code": "WITH BASE AS (\n    SELECT\n    CUSTOMER_ID,\n    CUSTOMER_NAME,\n    COMPANY,\n    PRODUCT_ID,\n    PRODUCT_FAMILY,\n    PRODUCT_SUB_FAMILY,\n    PAYMENT_MONTH,\n    DATEADD(year,-1,PAYMENT_MONTH) AS PREVIOUS_MONTH,\n    REVENUE_TYPE,\n    TOTAL_REVENUE,\n    QUANTITY,\n    COMPANIES\n    FROM \n    mini_project.intermediate_joins.outer_join\n),CTE AS(\n    SELECT\n    BASE.CUSTOMER_ID,\n    BASE.CUSTOMER_NAME,\n    BASE.COMPANY,\n    BASE.PRODUCT_ID,\n    BASE.PRODUCT_FAMILY,\n    BASE.PRODUCT_SUB_FAMILY,\n    BASE.PAYMENT_MONTH,\n    BASE.PREVIOUS_MONTH,\n    BASE.REVENUE_TYPE,\n    BASE.TOTAL_REVENUE,\n    BASE.QUANTITY,\n    BASE.COMPANIES,\n    OJ.TOTAL_REVENUE AS PREVIOUS_MONTH_REVENUE\n    FROM\n    BASE LEFT JOIN mini_project.intermediate_joins.outer_join AS OJ on BASE.PREVIOUS_MONTH = OJ.PAYMENT_MONTH AND BASE.CUSTOMER_ID = OJ.CUSTOMER_ID \n),FINAL AS (\n    SELECT \n*,\nCASE\n    WHEN PREVIOUS_MONTH_REVENUE IS NULL THEN 'NEW_CUSTOMER'\n    WHEN TOTAL_REVENUE = 0 THEN 'CHURNED_CUSTOMER'\n    ELSE 'RETAINED_CUSTOMER'\nEND AS RETENTION,\nCASE\n    WHEN PREVIOUS_MONTH_REVENUE IS NULL THEN 0\n    WHEN TOTAL_REVENUE = 0 THEN ABS(PREVIOUS_MONTH_REVENUE)\n    ELSE 0\nEND AS CUSTOMER_CHURN_REVENUE\nFROM \ncte\nORDER BY CUSTOMER_ID\n)\nSELECT \n*\nFROM\nFINAL\nORDER BY CUSTOMER_ID,PAYMENT_MONTH", "relation_name": "mini_project.mart.kpi1_ltm", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:09.135805Z", "completed_at": "2025-03-14T14:01:09.139771Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:09.141012Z", "completed_at": "2025-03-14T14:01:09.564481Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4300537109375, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7db6-000c-3d6e0001fef2"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.newlogos_kpi", "compiled": true, "compiled_code": "WITH FIRST_PURCHASE AS (\n    SELECT \n        CUSTOMER_ID,\n        MIN(PAYMENT_MONTH) AS FIRST_PURCHASE\n    FROM\n    mini_project.intermediate_joins.outer_join\n    GROUP BY CUSTOMER_ID\n)\nSELECT\n    YEAR(FIRST_PURCHASE) AS FISCAL_YEAR,\n    COUNT(CUSTOMER_ID) AS NEW_CUSTOMERS\nFROM FIRST_PURCHASE\nGROUP BY FISCAL_YEAR", "relation_name": "mini_project.mart.newlogos_kpi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:09.572267Z", "completed_at": "2025-03-14T14:01:09.576910Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:09.576910Z", "completed_at": "2025-03-14T14:01:10.042635Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.470367431640625, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e8-3201-7db6-000c-3d6e0001fef6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.ranking_customers_based_on_revenue_kpi", "compiled": true, "compiled_code": "WITH CUSTOMER_REVENUE AS (\n    SELECT\n        CUSTOMER_ID,\n        CUSTOMER_NAME,\n        ROUND(SUM(TOTAL_REVENUE),3) AS TOTAL_REVENUE_BY_CUSTOMER\n    FROM\n    mini_project.intermediate_joins.outer_join\n    GROUP BY CUSTOMER_ID,CUSTOMER_NAME\n)\nSELECT \n    *,\n    RANK() OVER( ORDER BY TOTAL_REVENUE_BY_CUSTOMER DESC) AS RANK\nFROM \nCUSTOMER_REVENUE", "relation_name": "mini_project.mart.ranking_customers_based_on_revenue_kpi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:10.042635Z", "completed_at": "2025-03-14T14:01:10.060720Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:10.061065Z", "completed_at": "2025-03-14T14:01:10.547620Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5049853324890137, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e9-3201-7db6-000c-3d6e0001fefa"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.ranking_products_based_on_revenue_kpi", "compiled": true, "compiled_code": "WITH PRODUCT_REVENUE AS (\n    SELECT\n        PRODUCT_ID,\n        SUM(TOTAL_REVENUE) AS TOTAL_REVENUE_BY_PRODUCT\n    FROM\n    mini_project.intermediate_joins.outer_join\n    GROUP BY PRODUCT_ID\n)\nSELECT \n    *,\n    RANK() OVER( ORDER BY TOTAL_REVENUE_BY_PRODUCT DESC) AS RANK\nFROM \nPRODUCT_REVENUE", "relation_name": "mini_project.mart.ranking_products_based_on_revenue_kpi", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T14:01:10.557599Z", "completed_at": "2025-03-14T14:01:10.563662Z"}, {"name": "execute", "started_at": "2025-03-14T14:01:10.563662Z", "completed_at": "2025-03-14T14:01:11.434771Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8781797885894775, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00e9-3201-7db6-000c-3d6e0001fefe"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project.highest_cross_sell_and_product_churn_kpi", "compiled": true, "compiled_code": "WITH BASE AS (\n    SELECT \n        CUSTOMER_ID,\n        PAYMENT_MONTH,\n        CUSTOMER_NAME,\n        DATEADD(month,-3,PAYMENT_MONTH) AS PREVIOUS_MONTH,\n        COUNT(DISTINCT PRODUCT_ID) AS NO_OF_PRODUCTS,\n        SUM(TOTAL_REVENUE) AS TOTAL_REVENUE\n    FROM mini_project.mart.kpi1_lm\n    GROUP BY \n        CUSTOMER_ID,\n        PAYMENT_MONTH,\n        CUSTOMER_NAME\n    ORDER BY CUSTOMER_ID,PAYMENT_MONTH,CUSTOMER_NAME\n),BASE2 AS (\n    SELECT \n        CUSTOMER_ID,\n        PAYMENT_MONTH,\n        COUNT(PRODUCT_ID) AS NO_OF_PRODUCTS,\n        SUM(TOTAL_REVENUE) AS TOTAL_REVENUE\n    FROM mini_project.mart.kpi1_lm\n    GROUP BY \n        CUSTOMER_ID,\n        PAYMENT_MONTH\n),max_payment_month as (\n    select\n    max(payment_month) as max_payment_month\n    from mini_project.mart.kpi1_lm\n),\nproduct_churn AS (\n    SELECT\n        LM.CUSTOMER_NAME,\n        COUNT(DISTINCT CASE WHEN PAYMENT_MONTH < DATEADD(MONTH,-3,max_payment_month) THEN PRODUCT_ID END) AS Product_Churn\n    FROM\n        mini_project.mart.kpi1_lm AS LM join max_payment_month ON 1=1\n    GROUP BY\n        LM.CUSTOMER_NAME\n),\n FINAL AS (\n    SELECT \n        BASE.CUSTOMER_NAME,\n        BASE.CUSTOMER_ID,\n        BASE.PAYMENT_MONTH,\n        BASE.NO_OF_PRODUCTS,\n        BASE.TOTAL_REVENUE,\n        BASE.PREVIOUS_MONTH,\n        BASE2.TOTAL_REVENUE AS PREVIOUS_MONTH_REVENUE,\n        BASE2.NO_OF_PRODUCTS AS NO_OF_PRODUCTS_PAST_MONTH,\n        Product_Churn\n    FROM BASE LEFT JOIN BASE2 ON BASE.CUSTOMER_ID=BASE2.CUSTOMER_ID AND BASE.PREVIOUS_MONTH=BASE2.PAYMENT_MONTH LEFT JOIN PRODUCT_CHURN ON BASE.CUSTOMER_NAME=PRODUCT_CHURN.CUSTOMER_NAME\n    ORDER BY CUSTOMER_ID,PAYMENT_MONTH\n),FINAL2 AS (\nSELECT\n    CUSTOMER_ID,\n    CUSTOMER_NAME,\n    PAYMENT_MONTH,\n    NO_OF_PRODUCTS,\n    TOTAL_REVENUE,\n    PREVIOUS_MONTH,\n    PREVIOUS_MONTH_REVENUE,\n    NO_OF_PRODUCTS_PAST_MONTH,\n    CASE\n        WHEN (NO_OF_PRODUCTS-(NO_OF_PRODUCTS_PAST_MONTH-Product_Churn))>0 THEN (NO_OF_PRODUCTS-(NO_OF_PRODUCTS_PAST_MONTH-Product_Churn))\n        ELSE 0\n    END AS CROSS_SELL_IN_PRODUCTS,\n    CASE\n        WHEN (NO_OF_PRODUCTS-(NO_OF_PRODUCTS_PAST_MONTH-Product_Churn))>0 THEN (TOTAL_REVENUE-PREVIOUS_MONTH_REVENUE) \n        ELSE 0 \n    END AS CROSS_SELL_IN_REVENUE,\n    Product_Churn AS PRODUCT_CHURN\nFROM \nFINAL\n),FINAL3 AS (\n    SELECT\n    *,\n    RANK() OVER(ORDER BY CROSS_SELL_IN_REVENUE DESC) AS CROSS_SELL_RANK,\n    RANK() OVER(ORDER BY PRODUCT_CHURN DESC) AS PRODUCT_CHURN_RANK \n    FROM FINAL2\n)\nSELECT\n*\nFROM\nFINAL3\nORDER BY CROSS_SELL_RANK,PRODUCT_CHURN_RANK", "relation_name": "mini_project.mart.highest_cross_sell_and_product_churn_kpi", "batch_results": null}], "elapsed_time": 18.878589391708374, "args": {"cache_selected_only": false, "source_freshness_run_project_hooks": false, "introspect": true, "require_resource_names_without_spaces": false, "show_resource_report": false, "invocation_command": "dbt run", "state_modified_compare_vars": false, "partial_parse": true, "version_check": true, "empty": false, "select": [], "partial_parse_file_diff": true, "log_level": "info", "favor_state": false, "project_dir": "C:\\Users\\AdithyaKasturi\\mini_project", "state_modified_compare_more_unrendered_values": false, "static_parser": true, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "which": "run", "print": true, "log_file_max_bytes": 10485760, "strict_mode": false, "defer": false, "log_format": "default", "use_colors_file": true, "skip_nodes_if_on_run_start_fails": false, "use_colors": true, "require_explicit_package_overrides_for_builtin_materializations": true, "exclude": [], "send_anonymous_usage_stats": true, "log_path": "C:\\Users\\AdithyaKasturi\\mini_project\\logs", "printer_width": 80, "require_batched_execution_for_custom_microbatch_strategy": false, "profiles_dir": "C:\\Users\\AdithyaKasturi\\.dbt", "quiet": false, "vars": {}, "require_yaml_configuration_for_mf_time_spines": false, "write_json": true, "log_format_file": "debug", "indirect_selection": "eager", "require_nested_cumulative_type_params": false, "macro_debugging": false, "log_level_file": "debug"}}