WITH BASE AS (
    SELECT 
        CUSTOMER_ID,
        PAYMENT_MONTH,
        CUSTOMER_NAME,
        DATEADD(month,-3,PAYMENT_MONTH) AS PREVIOUS_MONTH,
        COUNT(DISTINCT PRODUCT_ID) AS NO_OF_PRODUCTS,
        SUM(TOTAL_REVENUE) AS TOTAL_REVENUE
    FROM mini_project.mart.kpi1_lm
    GROUP BY 
        CUSTOMER_ID,
        PAYMENT_MONTH,
        CUSTOMER_NAME
    ORDER BY CUSTOMER_ID,PAYMENT_MONTH,CUSTOMER_NAME
),BASE2 AS (
    SELECT 
        CUSTOMER_ID,
        PAYMENT_MONTH,
        COUNT(PRODUCT_ID) AS NO_OF_PRODUCTS,
        SUM(TOTAL_REVENUE) AS TOTAL_REVENUE
    FROM mini_project.mart.kpi1_lm
    GROUP BY 
        CUSTOMER_ID,
        PAYMENT_MONTH
),max_payment_month as (
    select
    max(payment_month) as max_payment_month
    from mini_project.mart.kpi1_lm
),
product_churn AS (
    SELECT
        LM.CUSTOMER_NAME,
        COUNT(DISTINCT CASE WHEN PAYMENT_MONTH < DATEADD(MONTH,-3,max_payment_month) THEN PRODUCT_ID END) AS Product_Churn
    FROM
        mini_project.mart.kpi1_lm AS LM join max_payment_month ON 1=1
    GROUP BY
        LM.CUSTOMER_NAME
),
 FINAL AS (
    SELECT 
        BASE.CUSTOMER_NAME,
        BASE.CUSTOMER_ID,
        BASE.PAYMENT_MONTH,
        BASE.NO_OF_PRODUCTS,
        BASE.TOTAL_REVENUE,
        BASE.PREVIOUS_MONTH,
        BASE2.TOTAL_REVENUE AS PREVIOUS_MONTH_REVENUE,
        BASE2.NO_OF_PRODUCTS AS NO_OF_PRODUCTS_PAST_MONTH,
        Product_Churn
    FROM BASE LEFT JOIN BASE2 ON BASE.CUSTOMER_ID=BASE2.CUSTOMER_ID AND BASE.PREVIOUS_MONTH=BASE2.PAYMENT_MONTH LEFT JOIN PRODUCT_CHURN ON BASE.CUSTOMER_NAME=PRODUCT_CHURN.CUSTOMER_NAME
    ORDER BY CUSTOMER_ID,PAYMENT_MONTH
),FINAL2 AS (
SELECT
    CUSTOMER_ID,
    CUSTOMER_NAME,
    PAYMENT_MONTH,
    NO_OF_PRODUCTS,
    TOTAL_REVENUE,
    PREVIOUS_MONTH,
    PREVIOUS_MONTH_REVENUE,
    NO_OF_PRODUCTS_PAST_MONTH,
    CASE
        WHEN (NO_OF_PRODUCTS-(NO_OF_PRODUCTS_PAST_MONTH-Product_Churn))>0 THEN (NO_OF_PRODUCTS-(NO_OF_PRODUCTS_PAST_MONTH-Product_Churn))
        ELSE 0
    END AS CROSS_SELL_IN_PRODUCTS,
    CASE
        WHEN (NO_OF_PRODUCTS-(NO_OF_PRODUCTS_PAST_MONTH-Product_Churn))>0 THEN (TOTAL_REVENUE-PREVIOUS_MONTH_REVENUE) 
        ELSE 0 
    END AS CROSS_SELL_IN_REVENUE,
    Product_Churn AS PRODUCT_CHURN
FROM 
FINAL
),FINAL3 AS (
    SELECT
    *,
    RANK() OVER(ORDER BY CROSS_SELL_IN_REVENUE DESC) AS CROSS_SELL_RANK,
    RANK() OVER(ORDER BY PRODUCT_CHURN DESC) AS PRODUCT_CHURN_RANK 
    FROM FINAL2
)
SELECT
*
FROM
FINAL3
ORDER BY CROSS_SELL_RANK,PRODUCT_CHURN_RANK